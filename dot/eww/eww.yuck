;;;;;;;;;;;
;;Widgets;;
;;;;;;;;;;;

;;bar
(defwidget bar []
  (box :orientation "h" ;; I used box here for more flexibilities
       :class "bar"
    (workSpaceWidget)
    (timeWidget)
    (sysTrayWidget)
  )
)

;;workSpaceWidget
(defwidget workSpaceWidget []
  (box :class "workSpaceWidget"
       :halign "start"
    (box :class "workSpaceButton"
      (button :class {active_workspace == 1 ? "ws-active" : "ws"}
              :onclick "hyprctl dispatch workspace 1" 1
      )
      "|"
      (button :class {active_workspace == 2 ? "ws-active" : "ws"}
              :onclick "hyprctl dispatch workspace 2" 2
      )
      "|"
      (button :class {active_workspace == 3 ? "ws-active" : "ws"}
              :onclick "hyprctl dispatch workspace 3" 3
      )
      "|"
      (button :class {active_workspace == 4 ? "ws-active" : "ws"}
              :onclick "hyprctl dispatch workspace 4" 4
      )
    )
  )
)


;;time
(defwidget timeWidget []
  (box :class "timeWidget"
       :halign "center"
    (box :class "timeText"
       :hexpand "false"
      time
    )
  )
)

;;sysTrayWidget
(defwidget sysTrayWidget []
  (box :class "sysTrayWidget"
       :halign "end"
       :space-evenly true
    (systray :class "systemTray"
             :spacing: 4
             :icon-size 20
             :prepend-new "true"
    )
  )
)

;;;;;;;;;;;
;;Windows;;
;;;;;;;;;;;


;;topbar
(defwindow topbar
  :monitor 0
  :stacking "fg"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "33px"
                      :anchor "top center")
  (bar)
)

;;;;;;;;
;;poll;;
;;;;;;;;

;;time
(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

;;active_workspace
(defpoll active_workspace :interval "0.1s" ;;simple way to achieve active workspace
  "hyprctl activeworkspace -j | jq -r '.id'") ;;you need 'jq' for this
